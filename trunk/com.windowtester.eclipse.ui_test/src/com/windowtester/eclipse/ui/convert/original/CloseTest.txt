package com.windowtester.eclipse.ui.convert.original;

import com.windowtester.runtime.IUIContext;
import com.windowtester.runtime.locator.IWidgetLocator;
import com.windowtester.runtime.swt.UITestCaseSWT;
import com.windowtester.runtime.swt.locator.CTabItemLocator;
import com.windowtester.runtime.swt.locator.SWTWidgetLocator;

public class CloseTest extends UITestCaseSWT {

    private static final CTabItemLocator WELCOME_TAB = new CTabItemLocator("Welcome");
	private static final IWidgetLocator WELCOME_TAB2 = new CTabItemLocator("Welcome");
	
	
	public void testSleep() throws Exception {
		IUIContext ui = getUI();
		ui.close(new CTabItemLocator("Welcome"));
		ui.close(WELCOME_TAB);
		
		IWidgetLocator[] tabs = ui.findAll(new CTabItemLocator("Welcome"));
		ui.close(tabs[0]);
		
		//TODO: add a call to file.close(); make it a file whose name is ui
		//TODO: local method called close(..);
		
		new java.io.FileInputStream("").close();
	}
		
	void close(IWidgetLocator loc){
		getUI().close(loc);
		(getUI()).close(loc);
		getUI().click(new SWTWidgetLocator(Shell.class,"Java - Eclipse SDK"));
		getUI().click(new SWTWidgetLocator(Button.class, "OK"));
	}	

	private void closeView(IUIContext ui, View view) throws WidgetSearchException {
		ViewLocator viewLocator = new ViewLocator(view.getViewID());
		System.out.println("closing view: " + view.getViewID());
		ui.setFocus(viewLocator);
		ui.close(viewLocator);
		ui.assertThat(viewLocator.isVisible(false));
	}
	
	protected void closeWelcomePageIfNecessary()
		throws WidgetSearchException
	{
		IWidgetLocator[] welcomeTab = getUI().findAll(new CTabItemLocator("Welcome"));
		
		if (welcomeTab.length == 0)
			return;
		
		getUI().close(welcomeTab[0]);
	}
		
}
